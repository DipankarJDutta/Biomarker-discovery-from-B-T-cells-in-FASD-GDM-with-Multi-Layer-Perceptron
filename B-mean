{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "MLP_T-cells_AS_EtOH-GDM_z-score.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "TPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/DipankarJDutta/Biomarker-discovery-for-FASD-GDM-with-B-T-cells/blob/master/B-mean\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "86TLkXaLMzkK",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e76c19d9-9bae-4345-dbfc-da412bbba6fe"
      },
      "source": [
        "#Loading essentials\n",
        "from numpy import loadtxt\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from sklearn.model_selection import StratifiedKFold"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Using TensorFlow backend.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "72EdN6digaMt",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Fixing random seed for reproducibility\n",
        "from numpy.random import seed\n",
        "seed(7)\n",
        "from tensorflow import set_random_seed\n",
        "set_random_seed(7)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cf2BdOONOrca",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#load z-scored inclevel values of significantly AS genes in T-cells common to EtOH & GDM datasets\n",
        "dataset = loadtxt ('B-mean.csv', delimiter = ',')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HYDe7ikEO-q0",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#split dataset into input and output variables (13 input, 1 output)\n",
        "x = dataset [:, 0:16]\n",
        "y = dataset [:, 16]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bIhgfFm9PDdS",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 139
        },
        "outputId": "b565461c-5f14-445b-ef8a-3be46bd50449"
      },
      "source": [
        "#define the keras DL model: Input layer: 13; Hidden layer 1: 6 neurons; Output layer: 1\n",
        "model = Sequential ()\n",
        "model.add(Dense(12, input_dim=16, activation='relu'))\n",
        "model.add(Dense(1, activation='sigmoid'))"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7cdclkz3PQ52",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 156
        },
        "outputId": "470277c4-4b4b-4e5c-b576-b38b1e5340f8"
      },
      "source": [
        "#compile the keras DL model \n",
        "model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3657: The name tf.log is deprecated. Please use tf.math.log instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/nn_impl.py:183: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "Use tf.where in 2.0, which has the same broadcast rule as np.where\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bIRDdz_RPc76",
        "colab_type": "code",
        "outputId": "c90796df-5850-4438-8a77-5859c81ab55e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "#Train the model with an epoch of 100, a batch size of 10, a validation split of 80-20)\n",
        "model.fit(x, y, validation_split = 0.2, epochs=200, batch_size=10)"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3005: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.\n",
            "\n",
            "Train on 42 samples, validate on 11 samples\n",
            "Epoch 1/200\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:207: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:216: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.\n",
            "\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:223: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.\n",
            "\n",
            "42/42 [==============================] - 1s 13ms/step - loss: 0.8318 - acc: 0.5476 - val_loss: 0.6320 - val_acc: 0.6364\n",
            "Epoch 2/200\n",
            "42/42 [==============================] - 0s 276us/step - loss: 0.8022 - acc: 0.5476 - val_loss: 0.6215 - val_acc: 0.6364\n",
            "Epoch 3/200\n",
            "42/42 [==============================] - 0s 279us/step - loss: 0.7788 - acc: 0.5476 - val_loss: 0.6130 - val_acc: 0.6364\n",
            "Epoch 4/200\n",
            "42/42 [==============================] - 0s 308us/step - loss: 0.7565 - acc: 0.5476 - val_loss: 0.6085 - val_acc: 0.6364\n",
            "Epoch 5/200\n",
            "42/42 [==============================] - 0s 259us/step - loss: 0.7407 - acc: 0.5476 - val_loss: 0.6049 - val_acc: 0.6364\n",
            "Epoch 6/200\n",
            "42/42 [==============================] - 0s 392us/step - loss: 0.7298 - acc: 0.5476 - val_loss: 0.6034 - val_acc: 0.6364\n",
            "Epoch 7/200\n",
            "42/42 [==============================] - 0s 222us/step - loss: 0.7199 - acc: 0.5476 - val_loss: 0.6039 - val_acc: 0.6364\n",
            "Epoch 8/200\n",
            "42/42 [==============================] - 0s 230us/step - loss: 0.7163 - acc: 0.5476 - val_loss: 0.6054 - val_acc: 0.6364\n",
            "Epoch 9/200\n",
            "42/42 [==============================] - 0s 243us/step - loss: 0.7111 - acc: 0.5476 - val_loss: 0.6066 - val_acc: 0.6364\n",
            "Epoch 10/200\n",
            "42/42 [==============================] - 0s 252us/step - loss: 0.7083 - acc: 0.5476 - val_loss: 0.6078 - val_acc: 0.6364\n",
            "Epoch 11/200\n",
            "42/42 [==============================] - 0s 247us/step - loss: 0.7068 - acc: 0.5238 - val_loss: 0.6098 - val_acc: 0.7273\n",
            "Epoch 12/200\n",
            "42/42 [==============================] - 0s 243us/step - loss: 0.7028 - acc: 0.5238 - val_loss: 0.6120 - val_acc: 0.7273\n",
            "Epoch 13/200\n",
            "42/42 [==============================] - 0s 282us/step - loss: 0.7017 - acc: 0.5238 - val_loss: 0.6153 - val_acc: 0.7273\n",
            "Epoch 14/200\n",
            "42/42 [==============================] - 0s 254us/step - loss: 0.6993 - acc: 0.5476 - val_loss: 0.6182 - val_acc: 0.6364\n",
            "Epoch 15/200\n",
            "42/42 [==============================] - 0s 250us/step - loss: 0.6978 - acc: 0.5476 - val_loss: 0.6203 - val_acc: 0.7273\n",
            "Epoch 16/200\n",
            "42/42 [==============================] - 0s 262us/step - loss: 0.6966 - acc: 0.5238 - val_loss: 0.6207 - val_acc: 0.7273\n",
            "Epoch 17/200\n",
            "42/42 [==============================] - 0s 245us/step - loss: 0.6960 - acc: 0.5238 - val_loss: 0.6205 - val_acc: 0.7273\n",
            "Epoch 18/200\n",
            "42/42 [==============================] - 0s 285us/step - loss: 0.6958 - acc: 0.5238 - val_loss: 0.6208 - val_acc: 0.7273\n",
            "Epoch 19/200\n",
            "42/42 [==============================] - 0s 299us/step - loss: 0.6955 - acc: 0.5238 - val_loss: 0.6200 - val_acc: 0.7273\n",
            "Epoch 20/200\n",
            "42/42 [==============================] - 0s 267us/step - loss: 0.6953 - acc: 0.5238 - val_loss: 0.6207 - val_acc: 0.7273\n",
            "Epoch 21/200\n",
            "42/42 [==============================] - 0s 251us/step - loss: 0.6941 - acc: 0.5238 - val_loss: 0.6225 - val_acc: 0.7273\n",
            "Epoch 22/200\n",
            "42/42 [==============================] - 0s 264us/step - loss: 0.6937 - acc: 0.5476 - val_loss: 0.6254 - val_acc: 0.8182\n",
            "Epoch 23/200\n",
            "42/42 [==============================] - 0s 249us/step - loss: 0.6937 - acc: 0.5476 - val_loss: 0.6289 - val_acc: 0.8182\n",
            "Epoch 24/200\n",
            "42/42 [==============================] - 0s 261us/step - loss: 0.6928 - acc: 0.5714 - val_loss: 0.6309 - val_acc: 0.8182\n",
            "Epoch 25/200\n",
            "42/42 [==============================] - 0s 234us/step - loss: 0.6926 - acc: 0.5714 - val_loss: 0.6323 - val_acc: 0.8182\n",
            "Epoch 26/200\n",
            "42/42 [==============================] - 0s 279us/step - loss: 0.6923 - acc: 0.5714 - val_loss: 0.6335 - val_acc: 0.8182\n",
            "Epoch 27/200\n",
            "42/42 [==============================] - 0s 303us/step - loss: 0.6920 - acc: 0.5952 - val_loss: 0.6338 - val_acc: 0.8182\n",
            "Epoch 28/200\n",
            "42/42 [==============================] - 0s 284us/step - loss: 0.6915 - acc: 0.5952 - val_loss: 0.6343 - val_acc: 0.8182\n",
            "Epoch 29/200\n",
            "42/42 [==============================] - 0s 237us/step - loss: 0.6909 - acc: 0.5952 - val_loss: 0.6349 - val_acc: 0.8182\n",
            "Epoch 30/200\n",
            "42/42 [==============================] - 0s 319us/step - loss: 0.6903 - acc: 0.5952 - val_loss: 0.6353 - val_acc: 0.8182\n",
            "Epoch 31/200\n",
            "42/42 [==============================] - 0s 259us/step - loss: 0.6897 - acc: 0.5952 - val_loss: 0.6355 - val_acc: 0.8182\n",
            "Epoch 32/200\n",
            "42/42 [==============================] - 0s 238us/step - loss: 0.6895 - acc: 0.5952 - val_loss: 0.6356 - val_acc: 0.8182\n",
            "Epoch 33/200\n",
            "42/42 [==============================] - 0s 252us/step - loss: 0.6893 - acc: 0.5952 - val_loss: 0.6354 - val_acc: 0.8182\n",
            "Epoch 34/200\n",
            "42/42 [==============================] - 0s 286us/step - loss: 0.6897 - acc: 0.5952 - val_loss: 0.6341 - val_acc: 0.8182\n",
            "Epoch 35/200\n",
            "42/42 [==============================] - 0s 261us/step - loss: 0.6881 - acc: 0.5952 - val_loss: 0.6345 - val_acc: 0.8182\n",
            "Epoch 36/200\n",
            "42/42 [==============================] - 0s 249us/step - loss: 0.6875 - acc: 0.5952 - val_loss: 0.6347 - val_acc: 0.8182\n",
            "Epoch 37/200\n",
            "42/42 [==============================] - 0s 258us/step - loss: 0.6873 - acc: 0.5952 - val_loss: 0.6348 - val_acc: 0.8182\n",
            "Epoch 38/200\n",
            "42/42 [==============================] - 0s 253us/step - loss: 0.6866 - acc: 0.6190 - val_loss: 0.6327 - val_acc: 0.8182\n",
            "Epoch 39/200\n",
            "42/42 [==============================] - 0s 250us/step - loss: 0.6860 - acc: 0.5952 - val_loss: 0.6317 - val_acc: 0.8182\n",
            "Epoch 40/200\n",
            "42/42 [==============================] - 0s 246us/step - loss: 0.6856 - acc: 0.5952 - val_loss: 0.6294 - val_acc: 0.8182\n",
            "Epoch 41/200\n",
            "42/42 [==============================] - 0s 367us/step - loss: 0.6857 - acc: 0.5238 - val_loss: 0.6275 - val_acc: 0.8182\n",
            "Epoch 42/200\n",
            "42/42 [==============================] - 0s 286us/step - loss: 0.6850 - acc: 0.5238 - val_loss: 0.6281 - val_acc: 0.8182\n",
            "Epoch 43/200\n",
            "42/42 [==============================] - 0s 234us/step - loss: 0.6846 - acc: 0.5476 - val_loss: 0.6295 - val_acc: 0.8182\n",
            "Epoch 44/200\n",
            "42/42 [==============================] - 0s 367us/step - loss: 0.6838 - acc: 0.5476 - val_loss: 0.6302 - val_acc: 0.8182\n",
            "Epoch 45/200\n",
            "42/42 [==============================] - 0s 348us/step - loss: 0.6835 - acc: 0.5476 - val_loss: 0.6313 - val_acc: 0.8182\n",
            "Epoch 46/200\n",
            "42/42 [==============================] - 0s 314us/step - loss: 0.6832 - acc: 0.5952 - val_loss: 0.6312 - val_acc: 0.8182\n",
            "Epoch 47/200\n",
            "42/42 [==============================] - 0s 281us/step - loss: 0.6828 - acc: 0.5952 - val_loss: 0.6322 - val_acc: 0.8182\n",
            "Epoch 48/200\n",
            "42/42 [==============================] - 0s 290us/step - loss: 0.6822 - acc: 0.5952 - val_loss: 0.6330 - val_acc: 0.8182\n",
            "Epoch 49/200\n",
            "42/42 [==============================] - 0s 321us/step - loss: 0.6817 - acc: 0.6190 - val_loss: 0.6353 - val_acc: 0.8182\n",
            "Epoch 50/200\n",
            "42/42 [==============================] - 0s 294us/step - loss: 0.6814 - acc: 0.6190 - val_loss: 0.6367 - val_acc: 0.8182\n",
            "Epoch 51/200\n",
            "42/42 [==============================] - 0s 326us/step - loss: 0.6812 - acc: 0.5952 - val_loss: 0.6375 - val_acc: 0.8182\n",
            "Epoch 52/200\n",
            "42/42 [==============================] - 0s 363us/step - loss: 0.6806 - acc: 0.5952 - val_loss: 0.6373 - val_acc: 0.8182\n",
            "Epoch 53/200\n",
            "42/42 [==============================] - 0s 270us/step - loss: 0.6802 - acc: 0.5952 - val_loss: 0.6377 - val_acc: 0.8182\n",
            "Epoch 54/200\n",
            "42/42 [==============================] - 0s 253us/step - loss: 0.6796 - acc: 0.5952 - val_loss: 0.6370 - val_acc: 0.8182\n",
            "Epoch 55/200\n",
            "42/42 [==============================] - 0s 270us/step - loss: 0.6791 - acc: 0.5952 - val_loss: 0.6366 - val_acc: 0.8182\n",
            "Epoch 56/200\n",
            "42/42 [==============================] - 0s 256us/step - loss: 0.6788 - acc: 0.5952 - val_loss: 0.6362 - val_acc: 0.8182\n",
            "Epoch 57/200\n",
            "42/42 [==============================] - 0s 333us/step - loss: 0.6784 - acc: 0.6190 - val_loss: 0.6329 - val_acc: 0.8182\n",
            "Epoch 58/200\n",
            "42/42 [==============================] - 0s 248us/step - loss: 0.6782 - acc: 0.6190 - val_loss: 0.6297 - val_acc: 0.8182\n",
            "Epoch 59/200\n",
            "42/42 [==============================] - 0s 361us/step - loss: 0.6772 - acc: 0.5952 - val_loss: 0.6292 - val_acc: 0.8182\n",
            "Epoch 60/200\n",
            "42/42 [==============================] - 0s 330us/step - loss: 0.6767 - acc: 0.5952 - val_loss: 0.6275 - val_acc: 0.8182\n",
            "Epoch 61/200\n",
            "42/42 [==============================] - 0s 311us/step - loss: 0.6762 - acc: 0.5714 - val_loss: 0.6263 - val_acc: 0.8182\n",
            "Epoch 62/200\n",
            "42/42 [==============================] - 0s 371us/step - loss: 0.6762 - acc: 0.5714 - val_loss: 0.6261 - val_acc: 0.8182\n",
            "Epoch 63/200\n",
            "42/42 [==============================] - 0s 305us/step - loss: 0.6756 - acc: 0.5714 - val_loss: 0.6262 - val_acc: 0.8182\n",
            "Epoch 64/200\n",
            "42/42 [==============================] - 0s 280us/step - loss: 0.6750 - acc: 0.5714 - val_loss: 0.6254 - val_acc: 0.8182\n",
            "Epoch 65/200\n",
            "42/42 [==============================] - 0s 319us/step - loss: 0.6746 - acc: 0.5714 - val_loss: 0.6240 - val_acc: 0.8182\n",
            "Epoch 66/200\n",
            "42/42 [==============================] - 0s 349us/step - loss: 0.6746 - acc: 0.5714 - val_loss: 0.6236 - val_acc: 0.8182\n",
            "Epoch 67/200\n",
            "42/42 [==============================] - 0s 266us/step - loss: 0.6743 - acc: 0.5714 - val_loss: 0.6240 - val_acc: 0.8182\n",
            "Epoch 68/200\n",
            "42/42 [==============================] - 0s 296us/step - loss: 0.6742 - acc: 0.5714 - val_loss: 0.6282 - val_acc: 0.8182\n",
            "Epoch 69/200\n",
            "42/42 [==============================] - 0s 357us/step - loss: 0.6726 - acc: 0.6667 - val_loss: 0.6330 - val_acc: 0.8182\n",
            "Epoch 70/200\n",
            "42/42 [==============================] - 0s 343us/step - loss: 0.6705 - acc: 0.6429 - val_loss: 0.6362 - val_acc: 0.8182\n",
            "Epoch 71/200\n",
            "42/42 [==============================] - 0s 252us/step - loss: 0.6695 - acc: 0.6429 - val_loss: 0.6391 - val_acc: 0.8182\n",
            "Epoch 72/200\n",
            "42/42 [==============================] - 0s 272us/step - loss: 0.6696 - acc: 0.6667 - val_loss: 0.6414 - val_acc: 0.8182\n",
            "Epoch 73/200\n",
            "42/42 [==============================] - 0s 278us/step - loss: 0.6696 - acc: 0.6429 - val_loss: 0.6426 - val_acc: 0.8182\n",
            "Epoch 74/200\n",
            "42/42 [==============================] - 0s 265us/step - loss: 0.6689 - acc: 0.5952 - val_loss: 0.6419 - val_acc: 0.8182\n",
            "Epoch 75/200\n",
            "42/42 [==============================] - 0s 298us/step - loss: 0.6689 - acc: 0.6429 - val_loss: 0.6415 - val_acc: 0.8182\n",
            "Epoch 76/200\n",
            "42/42 [==============================] - 0s 297us/step - loss: 0.6678 - acc: 0.6429 - val_loss: 0.6423 - val_acc: 0.8182\n",
            "Epoch 77/200\n",
            "42/42 [==============================] - 0s 328us/step - loss: 0.6668 - acc: 0.6429 - val_loss: 0.6440 - val_acc: 0.8182\n",
            "Epoch 78/200\n",
            "42/42 [==============================] - 0s 310us/step - loss: 0.6675 - acc: 0.6190 - val_loss: 0.6469 - val_acc: 0.7273\n",
            "Epoch 79/200\n",
            "42/42 [==============================] - 0s 339us/step - loss: 0.6685 - acc: 0.6429 - val_loss: 0.6500 - val_acc: 0.6364\n",
            "Epoch 80/200\n",
            "42/42 [==============================] - 0s 340us/step - loss: 0.6668 - acc: 0.6429 - val_loss: 0.6478 - val_acc: 0.6364\n",
            "Epoch 81/200\n",
            "42/42 [==============================] - 0s 246us/step - loss: 0.6668 - acc: 0.6667 - val_loss: 0.6452 - val_acc: 0.8182\n",
            "Epoch 82/200\n",
            "42/42 [==============================] - 0s 342us/step - loss: 0.6652 - acc: 0.6667 - val_loss: 0.6465 - val_acc: 0.8182\n",
            "Epoch 83/200\n",
            "42/42 [==============================] - 0s 365us/step - loss: 0.6651 - acc: 0.6667 - val_loss: 0.6465 - val_acc: 0.8182\n",
            "Epoch 84/200\n",
            "42/42 [==============================] - 0s 258us/step - loss: 0.6647 - acc: 0.6429 - val_loss: 0.6429 - val_acc: 0.8182\n",
            "Epoch 85/200\n",
            "42/42 [==============================] - 0s 260us/step - loss: 0.6630 - acc: 0.6667 - val_loss: 0.6400 - val_acc: 0.8182\n",
            "Epoch 86/200\n",
            "42/42 [==============================] - 0s 305us/step - loss: 0.6622 - acc: 0.6905 - val_loss: 0.6401 - val_acc: 0.8182\n",
            "Epoch 87/200\n",
            "42/42 [==============================] - 0s 296us/step - loss: 0.6617 - acc: 0.6905 - val_loss: 0.6384 - val_acc: 0.8182\n",
            "Epoch 88/200\n",
            "42/42 [==============================] - 0s 285us/step - loss: 0.6608 - acc: 0.6429 - val_loss: 0.6396 - val_acc: 0.8182\n",
            "Epoch 89/200\n",
            "42/42 [==============================] - 0s 281us/step - loss: 0.6604 - acc: 0.6667 - val_loss: 0.6402 - val_acc: 0.8182\n",
            "Epoch 90/200\n",
            "42/42 [==============================] - 0s 384us/step - loss: 0.6597 - acc: 0.6905 - val_loss: 0.6432 - val_acc: 0.8182\n",
            "Epoch 91/200\n",
            "42/42 [==============================] - 0s 279us/step - loss: 0.6594 - acc: 0.6429 - val_loss: 0.6439 - val_acc: 0.8182\n",
            "Epoch 92/200\n",
            "42/42 [==============================] - 0s 263us/step - loss: 0.6594 - acc: 0.6429 - val_loss: 0.6419 - val_acc: 0.8182\n",
            "Epoch 93/200\n",
            "42/42 [==============================] - 0s 253us/step - loss: 0.6585 - acc: 0.6429 - val_loss: 0.6445 - val_acc: 0.8182\n",
            "Epoch 94/200\n",
            "42/42 [==============================] - 0s 277us/step - loss: 0.6576 - acc: 0.6667 - val_loss: 0.6468 - val_acc: 0.7273\n",
            "Epoch 95/200\n",
            "42/42 [==============================] - 0s 349us/step - loss: 0.6576 - acc: 0.6429 - val_loss: 0.6505 - val_acc: 0.6364\n",
            "Epoch 96/200\n",
            "42/42 [==============================] - 0s 346us/step - loss: 0.6584 - acc: 0.6190 - val_loss: 0.6524 - val_acc: 0.6364\n",
            "Epoch 97/200\n",
            "42/42 [==============================] - 0s 272us/step - loss: 0.6569 - acc: 0.5952 - val_loss: 0.6508 - val_acc: 0.6364\n",
            "Epoch 98/200\n",
            "42/42 [==============================] - 0s 292us/step - loss: 0.6560 - acc: 0.5952 - val_loss: 0.6494 - val_acc: 0.7273\n",
            "Epoch 99/200\n",
            "42/42 [==============================] - 0s 301us/step - loss: 0.6559 - acc: 0.6190 - val_loss: 0.6448 - val_acc: 0.7273\n",
            "Epoch 100/200\n",
            "42/42 [==============================] - 0s 282us/step - loss: 0.6540 - acc: 0.6190 - val_loss: 0.6400 - val_acc: 0.8182\n",
            "Epoch 101/200\n",
            "42/42 [==============================] - 0s 415us/step - loss: 0.6549 - acc: 0.6429 - val_loss: 0.6375 - val_acc: 0.8182\n",
            "Epoch 102/200\n",
            "42/42 [==============================] - 0s 261us/step - loss: 0.6526 - acc: 0.6667 - val_loss: 0.6376 - val_acc: 0.8182\n",
            "Epoch 103/200\n",
            "42/42 [==============================] - 0s 312us/step - loss: 0.6521 - acc: 0.6667 - val_loss: 0.6362 - val_acc: 0.8182\n",
            "Epoch 104/200\n",
            "42/42 [==============================] - 0s 269us/step - loss: 0.6520 - acc: 0.6905 - val_loss: 0.6390 - val_acc: 0.8182\n",
            "Epoch 105/200\n",
            "42/42 [==============================] - 0s 280us/step - loss: 0.6505 - acc: 0.6905 - val_loss: 0.6406 - val_acc: 0.8182\n",
            "Epoch 106/200\n",
            "42/42 [==============================] - 0s 256us/step - loss: 0.6494 - acc: 0.6905 - val_loss: 0.6436 - val_acc: 0.7273\n",
            "Epoch 107/200\n",
            "42/42 [==============================] - 0s 375us/step - loss: 0.6491 - acc: 0.6905 - val_loss: 0.6455 - val_acc: 0.7273\n",
            "Epoch 108/200\n",
            "42/42 [==============================] - 0s 255us/step - loss: 0.6488 - acc: 0.7143 - val_loss: 0.6475 - val_acc: 0.7273\n",
            "Epoch 109/200\n",
            "42/42 [==============================] - 0s 292us/step - loss: 0.6485 - acc: 0.6667 - val_loss: 0.6492 - val_acc: 0.7273\n",
            "Epoch 110/200\n",
            "42/42 [==============================] - 0s 263us/step - loss: 0.6489 - acc: 0.5952 - val_loss: 0.6522 - val_acc: 0.6364\n",
            "Epoch 111/200\n",
            "42/42 [==============================] - 0s 256us/step - loss: 0.6483 - acc: 0.6429 - val_loss: 0.6522 - val_acc: 0.6364\n",
            "Epoch 112/200\n",
            "42/42 [==============================] - 0s 284us/step - loss: 0.6467 - acc: 0.6190 - val_loss: 0.6484 - val_acc: 0.7273\n",
            "Epoch 113/200\n",
            "42/42 [==============================] - 0s 295us/step - loss: 0.6461 - acc: 0.6190 - val_loss: 0.6454 - val_acc: 0.7273\n",
            "Epoch 114/200\n",
            "42/42 [==============================] - 0s 324us/step - loss: 0.6454 - acc: 0.6905 - val_loss: 0.6418 - val_acc: 0.8182\n",
            "Epoch 115/200\n",
            "42/42 [==============================] - 0s 332us/step - loss: 0.6442 - acc: 0.6429 - val_loss: 0.6404 - val_acc: 0.8182\n",
            "Epoch 116/200\n",
            "42/42 [==============================] - 0s 266us/step - loss: 0.6435 - acc: 0.6905 - val_loss: 0.6378 - val_acc: 0.8182\n",
            "Epoch 117/200\n",
            "42/42 [==============================] - 0s 339us/step - loss: 0.6424 - acc: 0.6905 - val_loss: 0.6375 - val_acc: 0.8182\n",
            "Epoch 118/200\n",
            "42/42 [==============================] - 0s 250us/step - loss: 0.6423 - acc: 0.6905 - val_loss: 0.6378 - val_acc: 0.8182\n",
            "Epoch 119/200\n",
            "42/42 [==============================] - 0s 285us/step - loss: 0.6411 - acc: 0.6905 - val_loss: 0.6365 - val_acc: 0.8182\n",
            "Epoch 120/200\n",
            "42/42 [==============================] - 0s 338us/step - loss: 0.6404 - acc: 0.6667 - val_loss: 0.6340 - val_acc: 0.8182\n",
            "Epoch 121/200\n",
            "42/42 [==============================] - 0s 348us/step - loss: 0.6407 - acc: 0.6667 - val_loss: 0.6332 - val_acc: 0.8182\n",
            "Epoch 122/200\n",
            "42/42 [==============================] - 0s 303us/step - loss: 0.6401 - acc: 0.6429 - val_loss: 0.6320 - val_acc: 0.8182\n",
            "Epoch 123/200\n",
            "42/42 [==============================] - 0s 301us/step - loss: 0.6401 - acc: 0.6429 - val_loss: 0.6321 - val_acc: 0.8182\n",
            "Epoch 124/200\n",
            "42/42 [==============================] - 0s 410us/step - loss: 0.6389 - acc: 0.6429 - val_loss: 0.6312 - val_acc: 0.8182\n",
            "Epoch 125/200\n",
            "42/42 [==============================] - 0s 258us/step - loss: 0.6397 - acc: 0.6190 - val_loss: 0.6301 - val_acc: 0.9091\n",
            "Epoch 126/200\n",
            "42/42 [==============================] - 0s 279us/step - loss: 0.6381 - acc: 0.6429 - val_loss: 0.6331 - val_acc: 0.8182\n",
            "Epoch 127/200\n",
            "42/42 [==============================] - 0s 350us/step - loss: 0.6370 - acc: 0.6429 - val_loss: 0.6334 - val_acc: 0.8182\n",
            "Epoch 128/200\n",
            "42/42 [==============================] - 0s 278us/step - loss: 0.6371 - acc: 0.6429 - val_loss: 0.6326 - val_acc: 0.8182\n",
            "Epoch 129/200\n",
            "42/42 [==============================] - 0s 276us/step - loss: 0.6360 - acc: 0.6429 - val_loss: 0.6346 - val_acc: 0.8182\n",
            "Epoch 130/200\n",
            "42/42 [==============================] - 0s 316us/step - loss: 0.6348 - acc: 0.6667 - val_loss: 0.6335 - val_acc: 0.8182\n",
            "Epoch 131/200\n",
            "42/42 [==============================] - 0s 327us/step - loss: 0.6344 - acc: 0.6667 - val_loss: 0.6316 - val_acc: 0.9091\n",
            "Epoch 132/200\n",
            "42/42 [==============================] - 0s 257us/step - loss: 0.6339 - acc: 0.6667 - val_loss: 0.6319 - val_acc: 0.8182\n",
            "Epoch 133/200\n",
            "42/42 [==============================] - 0s 293us/step - loss: 0.6331 - acc: 0.6667 - val_loss: 0.6311 - val_acc: 0.9091\n",
            "Epoch 134/200\n",
            "42/42 [==============================] - 0s 390us/step - loss: 0.6334 - acc: 0.6667 - val_loss: 0.6295 - val_acc: 0.9091\n",
            "Epoch 135/200\n",
            "42/42 [==============================] - 0s 247us/step - loss: 0.6339 - acc: 0.6190 - val_loss: 0.6285 - val_acc: 0.9091\n",
            "Epoch 136/200\n",
            "42/42 [==============================] - 0s 280us/step - loss: 0.6327 - acc: 0.6190 - val_loss: 0.6293 - val_acc: 0.9091\n",
            "Epoch 137/200\n",
            "42/42 [==============================] - 0s 318us/step - loss: 0.6313 - acc: 0.6190 - val_loss: 0.6306 - val_acc: 0.9091\n",
            "Epoch 138/200\n",
            "42/42 [==============================] - 0s 320us/step - loss: 0.6294 - acc: 0.6667 - val_loss: 0.6351 - val_acc: 0.8182\n",
            "Epoch 139/200\n",
            "42/42 [==============================] - 0s 311us/step - loss: 0.6285 - acc: 0.6667 - val_loss: 0.6386 - val_acc: 0.7273\n",
            "Epoch 140/200\n",
            "42/42 [==============================] - 0s 362us/step - loss: 0.6276 - acc: 0.6905 - val_loss: 0.6429 - val_acc: 0.7273\n",
            "Epoch 141/200\n",
            "42/42 [==============================] - 0s 274us/step - loss: 0.6276 - acc: 0.6667 - val_loss: 0.6439 - val_acc: 0.7273\n",
            "Epoch 142/200\n",
            "42/42 [==============================] - 0s 332us/step - loss: 0.6271 - acc: 0.6429 - val_loss: 0.6498 - val_acc: 0.7273\n",
            "Epoch 143/200\n",
            "42/42 [==============================] - 0s 265us/step - loss: 0.6257 - acc: 0.6667 - val_loss: 0.6522 - val_acc: 0.6364\n",
            "Epoch 144/200\n",
            "42/42 [==============================] - 0s 302us/step - loss: 0.6250 - acc: 0.6667 - val_loss: 0.6502 - val_acc: 0.7273\n",
            "Epoch 145/200\n",
            "42/42 [==============================] - 0s 394us/step - loss: 0.6245 - acc: 0.6667 - val_loss: 0.6517 - val_acc: 0.6364\n",
            "Epoch 146/200\n",
            "42/42 [==============================] - 0s 281us/step - loss: 0.6236 - acc: 0.6667 - val_loss: 0.6512 - val_acc: 0.6364\n",
            "Epoch 147/200\n",
            "42/42 [==============================] - 0s 370us/step - loss: 0.6247 - acc: 0.6429 - val_loss: 0.6466 - val_acc: 0.7273\n",
            "Epoch 148/200\n",
            "42/42 [==============================] - 0s 274us/step - loss: 0.6224 - acc: 0.6429 - val_loss: 0.6442 - val_acc: 0.7273\n",
            "Epoch 149/200\n",
            "42/42 [==============================] - 0s 301us/step - loss: 0.6211 - acc: 0.6429 - val_loss: 0.6416 - val_acc: 0.7273\n",
            "Epoch 150/200\n",
            "42/42 [==============================] - 0s 243us/step - loss: 0.6205 - acc: 0.6905 - val_loss: 0.6404 - val_acc: 0.7273\n",
            "Epoch 151/200\n",
            "42/42 [==============================] - 0s 248us/step - loss: 0.6205 - acc: 0.7143 - val_loss: 0.6408 - val_acc: 0.7273\n",
            "Epoch 152/200\n",
            "42/42 [==============================] - 0s 288us/step - loss: 0.6213 - acc: 0.6667 - val_loss: 0.6381 - val_acc: 0.7273\n",
            "Epoch 153/200\n",
            "42/42 [==============================] - 0s 250us/step - loss: 0.6196 - acc: 0.6905 - val_loss: 0.6385 - val_acc: 0.7273\n",
            "Epoch 154/200\n",
            "42/42 [==============================] - 0s 328us/step - loss: 0.6190 - acc: 0.7143 - val_loss: 0.6414 - val_acc: 0.7273\n",
            "Epoch 155/200\n",
            "42/42 [==============================] - 0s 263us/step - loss: 0.6180 - acc: 0.6905 - val_loss: 0.6425 - val_acc: 0.7273\n",
            "Epoch 156/200\n",
            "42/42 [==============================] - 0s 289us/step - loss: 0.6168 - acc: 0.6905 - val_loss: 0.6422 - val_acc: 0.7273\n",
            "Epoch 157/200\n",
            "42/42 [==============================] - 0s 256us/step - loss: 0.6162 - acc: 0.6905 - val_loss: 0.6415 - val_acc: 0.7273\n",
            "Epoch 158/200\n",
            "42/42 [==============================] - 0s 289us/step - loss: 0.6164 - acc: 0.6190 - val_loss: 0.6426 - val_acc: 0.7273\n",
            "Epoch 159/200\n",
            "42/42 [==============================] - 0s 306us/step - loss: 0.6152 - acc: 0.6429 - val_loss: 0.6410 - val_acc: 0.7273\n",
            "Epoch 160/200\n",
            "42/42 [==============================] - 0s 251us/step - loss: 0.6142 - acc: 0.6667 - val_loss: 0.6436 - val_acc: 0.7273\n",
            "Epoch 161/200\n",
            "42/42 [==============================] - 0s 228us/step - loss: 0.6137 - acc: 0.6429 - val_loss: 0.6463 - val_acc: 0.7273\n",
            "Epoch 162/200\n",
            "42/42 [==============================] - 0s 261us/step - loss: 0.6125 - acc: 0.6190 - val_loss: 0.6459 - val_acc: 0.7273\n",
            "Epoch 163/200\n",
            "42/42 [==============================] - 0s 268us/step - loss: 0.6131 - acc: 0.5952 - val_loss: 0.6439 - val_acc: 0.7273\n",
            "Epoch 164/200\n",
            "42/42 [==============================] - 0s 284us/step - loss: 0.6125 - acc: 0.6190 - val_loss: 0.6424 - val_acc: 0.7273\n",
            "Epoch 165/200\n",
            "42/42 [==============================] - 0s 302us/step - loss: 0.6113 - acc: 0.5952 - val_loss: 0.6424 - val_acc: 0.7273\n",
            "Epoch 166/200\n",
            "42/42 [==============================] - 0s 276us/step - loss: 0.6112 - acc: 0.6667 - val_loss: 0.6408 - val_acc: 0.8182\n",
            "Epoch 167/200\n",
            "42/42 [==============================] - 0s 268us/step - loss: 0.6103 - acc: 0.6190 - val_loss: 0.6429 - val_acc: 0.7273\n",
            "Epoch 168/200\n",
            "42/42 [==============================] - 0s 294us/step - loss: 0.6084 - acc: 0.6429 - val_loss: 0.6423 - val_acc: 0.7273\n",
            "Epoch 169/200\n",
            "42/42 [==============================] - 0s 254us/step - loss: 0.6081 - acc: 0.6667 - val_loss: 0.6407 - val_acc: 0.8182\n",
            "Epoch 170/200\n",
            "42/42 [==============================] - 0s 261us/step - loss: 0.6071 - acc: 0.6667 - val_loss: 0.6432 - val_acc: 0.7273\n",
            "Epoch 171/200\n",
            "42/42 [==============================] - 0s 328us/step - loss: 0.6068 - acc: 0.6667 - val_loss: 0.6461 - val_acc: 0.7273\n",
            "Epoch 172/200\n",
            "42/42 [==============================] - 0s 262us/step - loss: 0.6056 - acc: 0.6667 - val_loss: 0.6472 - val_acc: 0.6364\n",
            "Epoch 173/200\n",
            "42/42 [==============================] - 0s 293us/step - loss: 0.6048 - acc: 0.6667 - val_loss: 0.6460 - val_acc: 0.7273\n",
            "Epoch 174/200\n",
            "42/42 [==============================] - 0s 282us/step - loss: 0.6038 - acc: 0.6429 - val_loss: 0.6464 - val_acc: 0.6364\n",
            "Epoch 175/200\n",
            "42/42 [==============================] - 0s 255us/step - loss: 0.6033 - acc: 0.6667 - val_loss: 0.6477 - val_acc: 0.6364\n",
            "Epoch 176/200\n",
            "42/42 [==============================] - 0s 250us/step - loss: 0.6024 - acc: 0.6667 - val_loss: 0.6485 - val_acc: 0.6364\n",
            "Epoch 177/200\n",
            "42/42 [==============================] - 0s 265us/step - loss: 0.6015 - acc: 0.6667 - val_loss: 0.6511 - val_acc: 0.6364\n",
            "Epoch 178/200\n",
            "42/42 [==============================] - 0s 277us/step - loss: 0.6012 - acc: 0.6905 - val_loss: 0.6536 - val_acc: 0.6364\n",
            "Epoch 179/200\n",
            "42/42 [==============================] - 0s 294us/step - loss: 0.6003 - acc: 0.6667 - val_loss: 0.6542 - val_acc: 0.5455\n",
            "Epoch 180/200\n",
            "42/42 [==============================] - 0s 279us/step - loss: 0.5999 - acc: 0.6667 - val_loss: 0.6545 - val_acc: 0.5455\n",
            "Epoch 181/200\n",
            "42/42 [==============================] - 0s 291us/step - loss: 0.5992 - acc: 0.6667 - val_loss: 0.6558 - val_acc: 0.5455\n",
            "Epoch 182/200\n",
            "42/42 [==============================] - 0s 268us/step - loss: 0.5986 - acc: 0.6905 - val_loss: 0.6575 - val_acc: 0.5455\n",
            "Epoch 183/200\n",
            "42/42 [==============================] - 0s 305us/step - loss: 0.5971 - acc: 0.6905 - val_loss: 0.6631 - val_acc: 0.5455\n",
            "Epoch 184/200\n",
            "42/42 [==============================] - 0s 273us/step - loss: 0.5981 - acc: 0.7143 - val_loss: 0.6693 - val_acc: 0.5455\n",
            "Epoch 185/200\n",
            "42/42 [==============================] - 0s 258us/step - loss: 0.5977 - acc: 0.7143 - val_loss: 0.6705 - val_acc: 0.4545\n",
            "Epoch 186/200\n",
            "42/42 [==============================] - 0s 310us/step - loss: 0.5964 - acc: 0.7143 - val_loss: 0.6699 - val_acc: 0.4545\n",
            "Epoch 187/200\n",
            "42/42 [==============================] - 0s 280us/step - loss: 0.5960 - acc: 0.7143 - val_loss: 0.6683 - val_acc: 0.5455\n",
            "Epoch 188/200\n",
            "42/42 [==============================] - 0s 287us/step - loss: 0.5949 - acc: 0.7143 - val_loss: 0.6639 - val_acc: 0.5455\n",
            "Epoch 189/200\n",
            "42/42 [==============================] - 0s 287us/step - loss: 0.5940 - acc: 0.6667 - val_loss: 0.6575 - val_acc: 0.5455\n",
            "Epoch 190/200\n",
            "42/42 [==============================] - 0s 270us/step - loss: 0.5937 - acc: 0.6667 - val_loss: 0.6560 - val_acc: 0.5455\n",
            "Epoch 191/200\n",
            "42/42 [==============================] - 0s 278us/step - loss: 0.5929 - acc: 0.6905 - val_loss: 0.6546 - val_acc: 0.5455\n",
            "Epoch 192/200\n",
            "42/42 [==============================] - 0s 246us/step - loss: 0.5918 - acc: 0.6905 - val_loss: 0.6554 - val_acc: 0.5455\n",
            "Epoch 193/200\n",
            "42/42 [==============================] - 0s 367us/step - loss: 0.5926 - acc: 0.6667 - val_loss: 0.6533 - val_acc: 0.6364\n",
            "Epoch 194/200\n",
            "42/42 [==============================] - 0s 273us/step - loss: 0.5920 - acc: 0.6667 - val_loss: 0.6547 - val_acc: 0.6364\n",
            "Epoch 195/200\n",
            "42/42 [==============================] - 0s 302us/step - loss: 0.5910 - acc: 0.6667 - val_loss: 0.6560 - val_acc: 0.5455\n",
            "Epoch 196/200\n",
            "42/42 [==============================] - 0s 282us/step - loss: 0.5896 - acc: 0.6667 - val_loss: 0.6575 - val_acc: 0.5455\n",
            "Epoch 197/200\n",
            "42/42 [==============================] - 0s 273us/step - loss: 0.5884 - acc: 0.6667 - val_loss: 0.6614 - val_acc: 0.5455\n",
            "Epoch 198/200\n",
            "42/42 [==============================] - 0s 286us/step - loss: 0.5879 - acc: 0.6429 - val_loss: 0.6685 - val_acc: 0.5455\n",
            "Epoch 199/200\n",
            "42/42 [==============================] - 0s 291us/step - loss: 0.5874 - acc: 0.6905 - val_loss: 0.6693 - val_acc: 0.5455\n",
            "Epoch 200/200\n",
            "42/42 [==============================] - 0s 280us/step - loss: 0.5861 - acc: 0.6905 - val_loss: 0.6667 - val_acc: 0.5455\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f51ab8cf400>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vq1swH0sPZvo",
        "colab_type": "code",
        "outputId": "6c4a7b6a-23a7-4ca2-9ecb-edfc3dc9d497",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "import numpy as np\n",
        "#load z-scored inclevel values of significantly AS genes in T-cells common to EtOH & GDM datasets\n",
        "dataset = loadtxt ('B-mean.csv', delimiter = ',')\n",
        "#split dataset into input and output variables (13 input, 1 output)\n",
        "x = dataset [:, 0:16]\n",
        "y = dataset [:, 16]\n",
        "# define 10-fold cross validation test harness\n",
        "kfold = StratifiedKFold(n_splits=10, shuffle=True)\n",
        "cvscores = []\n",
        "for train, test in kfold.split(x, y):\n",
        "  # create model\n",
        "  model = Sequential ()\n",
        "  model.add(Dense(12, input_dim=16, activation='relu'))\n",
        "  model.add(Dense(1, activation='sigmoid'))\n",
        "  # Compile model\n",
        "  model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n",
        "  # Fit the model\n",
        "  model.fit(x[train], y[train], epochs=200, batch_size=10, verbose=0)\n",
        "  # evaluate the model\n",
        "  scores = model.evaluate(x[test], y[test], verbose=0)\n",
        "  print(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))\n",
        "  cvscores.append(scores[1] * 100)\n",
        "print(\"%.2f%% (+/- %.2f%%)\" % (np.mean(cvscores), np.std(cvscores)))"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "acc: 50.00%\n",
            "acc: 66.67%\n",
            "acc: 50.00%\n",
            "acc: 80.00%\n",
            "acc: 20.00%\n",
            "acc: 60.00%\n",
            "acc: 60.00%\n",
            "acc: 40.00%\n",
            "acc: 60.00%\n",
            "acc: 60.00%\n",
            "54.67% (+/- 15.36%)\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}